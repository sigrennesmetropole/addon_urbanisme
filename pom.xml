<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.georchestra</groupId>
	<artifactId>urbanisme</artifactId>
	<version>17.0</version>
	<packaging>war</packaging>
	<description>This project contains two different things:

		* a server part which is powered by Mapfish print v3
		* a client part which aims to integrate Mapfishapp as an addon

		It provides land planning related capabilities, and allows the users to
		consult the "urbanism notes" and the "zoning of a urbanism local map".
		This module has been funded by Rennes-MÃ©tropole.</description>
	<properties>
		<!--SONAR-->
		<sonar.projectName>Urbanisme Addon</sonar.projectName>
		<sonar.projectKey>${env.SONAR_KEY}${project.artifactId}</sonar.projectKey>
		<!--SPRING-->
		<spring.version>5.3.39</spring.version>
		<spring-security.version>5.8.16</spring-security.version>
		<spring.data.version>2.7.18</spring.data.version>
		<!--MAVEN COMPILER-->
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>

		<javax.servlet.version>4.0.1</javax.servlet.version>
		<javax.annotation.version>1.3.2</javax.annotation.version>
		<httpclient.version>4.5.14</httpclient.version>
		<httpclient5.version>5.4.2</httpclient5.version>
		<mapfish.version>3.31.7</mapfish.version>
		<metrics.version>4.2.30</metrics.version>
		<jsr166y.version>1.7.0</jsr166y.version>
		<postgresql.version>42.7.5</postgresql.version>
		<junit.version>4.13.2</junit.version>
		<snakeyaml.version>2.4</snakeyaml.version>
		<commons-dbcp2.version>2.13.0</commons-dbcp2.version>
		<org.json.version>20240303</org.json.version>
		<groovy.version>3.0.23</groovy.version>
		<surefire.plugin.version>2.22.2</surefire.plugin.version>
		<jasperreports.fonts.version>6.0.0</jasperreports.fonts.version>
		<jasperreports.version>6.17.0</jasperreports.version>
		<velocity.version>1.7</velocity.version>
		<logback.version>1.5.17</logback.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents.client5</groupId>
			<artifactId>httpclient5</artifactId>
			<version>${httpclient5.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>${javax.annotation.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax.servlet.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.mapfish.mapfish-print</groupId>
			<artifactId>print-lib</artifactId>
			<version>${mapfish.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.codehaus.groovy</groupId>
				    <artifactId>groovy-all</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-ant</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-astbuilder</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-cli-picocli</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-console</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-datetime</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-docgenerator</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-groovydoc</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-groovysh</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-jmx</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-json</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-jsr223</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-macro</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-nio</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-servlet</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-sql</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-swing</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-templates</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-test</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-test-junit5</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-testng</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.codehaus.groovy</groupId>
		  <artifactId>groovy-xml</artifactId>
		  <version>${groovy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
		    <artifactId>json</artifactId>
		    <version>${org.json.version}</version>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>${snakeyaml.version}</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-logback</artifactId>
			<version>${metrics.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>${commons-dbcp2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring.data.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>${velocity.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>${jasperreports.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports-fonts</artifactId>
			<version>${jasperreports.fonts.version}</version>
		</dependency>
	</dependencies>
	<repositories>
		<repository>
			<id>central</id>
			<name>Maven Repository Switchboard</name>
			<url>https://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
		<repository>
			<id>osgeo</id>
			<url>https://repo.osgeo.org/repository/release/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<build>
		<finalName>urbanisme</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.plugin.version}</version>
				<configuration>
					<argLine>-Dfile.encoding=UTF-8</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.9.0</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.2.17.v20160517</version>
				<configuration>
					<webApp>
						<contextPath>/urbanisme</contextPath>
					</webApp>
					<scanIntervalSeconds>5</scanIntervalSeconds>
					<scanTargets>
						<scanTarget>src/main/java</scanTarget>
						<scanTarget>src/main/resources</scanTarget>
					</scanTargets>
					<httpConnector>
						<port>8080</port>
					</httpConnector>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<descriptors>
						<descriptor>addon-assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>prepare-docker-composition</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/docker</outputDirectory>
							<resources>
								<resource>
									<directory>src/docker</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>prepare-docker-mapfishapp</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/docker/mapfishapp/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>/*addon.zip</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>prepare-docker-urbanisme</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/docker/urbanisme/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>/*.war</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>prepare-docker-urbanisme-datadir</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/docker/urbanisme/etc/georchestra/urbanisme</outputDirectory>
							<resources>
								<resource>
									<directory>
										${project.build.resources[0].directory}</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
